@using MVCCivicaEmployeeMaster.ViewModels
@model List<EmployeeViewModel>

<br />
<h1 class="custom-heading">Employees</h1>
<br />

<div class="container">
    <div class="row mb-3">
        <div class="col-md-10">
            <form id="searchForm" asp-action="Index" method="get">
            <input type="search" class="form-control" placeholder="🔍 Search employee" id="searchbox" name="search" value="@ViewBag.search" onsearch="changePage(this.value,1, @ViewBag.pageSize,'@ViewBag.sortOrder')" />


            <!-- Validation message -->
            @if (!string.IsNullOrEmpty(ViewData["SearchError"] as string))
            {
                <div class="text-danger">
                    @ViewData["SearchError"]
                </div>
            }
            </form>
        </div>


        <div class="col-md-2 text-center">
            <a asp-action="Create" class="btn btn-outline-success"><i class="fa fa-user-plus"></i></a>
        </div>
    </div>

    <table class="table table-hover">
        <thead>
            <tr>

                <th class="custom-thead" style="background-color:#00b4c1">
                    Employee Name
                    <div class="fas fa-caret-up arrowup" id="sortAsc" style="cursor: pointer"></div>
                    <div class="fas fa-caret-down arrowdown" id="sortDesc" style="cursor: pointer"></div>
                </th>
                <th class="custom-thead" style="background-color:#00b4c1">Department</th>

                <th class="custom-thead" style="background-color:#00b4c1">Action</th>
            </tr>
        </thead>

        @if (Model == null || Model.Count == 0)
        {
            <tbody>
            <td colspan="6" class="text-center">
                No Record Found!
            </td>
            </tbody>
        }
        else
        {
            <tbody>
                @foreach(var e in Model)
                {
                    <tr >
                        <td data-href="@Url.Action("Details", new { id = e.Id })" style="cursor: pointer;">@e.FirstName &nbsp; @e.LastName</td>
                        <td data-href="@Url.Action("Details", new { id = e.Id })" style="cursor: pointer;">@e.EmployeeDepartment.DepartmentName</td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Employee Actions">
                                <a asp-action="Details" asp-route-id="@e.Id" class="btn btn-outline-info me-2"><i class="fas fa-info-circle"></i></a>
                                <a asp-action="Edit" asp-route-id="@e.Id" class="btn btn-outline-warning me-2"><i class="fas fa-edit"></i></a>
                                <form method="post" action="@Url.Action("Delete", "Employee")" onsubmit="return confirm('Are you sure you want to delete?')">
                                    <input type="hidden" name="id" value="@e.Id" />
                                    <button type="submit" class="btn btn-outline-danger"><i class="fas fa-trash-alt"></i></button>
                                </form>
                            </div>
                        </td>
                    </tr>
                    
                }
            </tbody>
        }
    </table>

    <br />
    <!-- Pagination -->
    <div class="row mb-3 align-items-center">
        <div class="col-sm-3">
            <!-- Page Size Dropdown -->
            <div class="page-size-container">
                <label for="pageSize" class="form-label">Page Size:</label>
                <select id="pageSize" class="form-select" value="@ViewBag.pageSize" onchange="changePage('@ViewBag.search',1, this.value,'@ViewBag.sortOrder')">
                    <option value="2">2</option>
                    <option value="4">4</option>
                    <option value="6">6</option>
                </select>
            </div>
        </div>
        <div class="col-sm-9 d-flex justify-content-end">
            <!-- Pagination controls -->
         
                <ul class="pagination">
                    <!-- Previous Button -->
                    <li class="page-item @(ViewBag.page == 1 ? "disabled" : "")">
                        <a class="page-link" href="/Employee/Index?search=@ViewBag.search&page=@(ViewBag.page - 1)&pageSize=@ViewBag.pageSize&sortOrder=@ViewBag.sortOrder">Previous</a>
                    </li>
                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.page ? "active" : "")">
                            
                            <a class="page-link" href="/Employee/Index?search=@ViewBag.search&page=@i&pageSize=@ViewBag.pageSize&sortOrder=@ViewBag.sortOrder">@i</a>
                        </li>
                    }
                    <!-- Next Button -->
                    <li class="page-item @(ViewBag.page == ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="/Employee/Index?search=@ViewBag.search&page=@(ViewBag.page + 1)&pageSize=@ViewBag.pageSize&sortOrder=@ViewBag.sortOrder">Next</a>

                    </li>
                    
                </ul>
            
        </div>



    </div>
    
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var currentPageSize = @(ViewBag.PageSize); // Get current page size from ViewBag
        var pageSizeDropdown = document.getElementById("pageSize");
        // Set selected option based on current page size
        for (var i = 0; i < pageSizeDropdown.options.length; i++) {
            if (pageSizeDropdown.options[i].value === currentPageSize.toString()) {
                pageSizeDropdown.selectedIndex = i;
                break;
            }
        }



        var rows = document.querySelectorAll('td[data-href]');
        rows.forEach(function (row) {
            row.addEventListener('click', function () {
                window.location.href = row.getAttribute('data-href');
            });
        });
    });

    document.getElementById("sortAsc").addEventListener("click", function ChangeSortDirection() {
        var sortOrder = "@ViewBag.sortOrder";
        console.log(sortOrder);
        if (sortOrder == 'desc') {
            sortOrder = 'asc';
        }
        // else if(sortOrder = 'desc') {
        //     sortOrder = 'asc';
        // }

        changePage('@ViewBag.search', @ViewBag.page, @ViewBag.pageSize, sortOrder);
    });

    document.getElementById("sortDesc").addEventListener("click", function ChangeSortDirection() {
        var sortOrder = "@ViewBag.sortOrder";
        console.log(sortOrder);
        if (sortOrder == 'asc') {
            sortOrder = 'desc';
        }
        // else if (sortOrder = 'asc') {
        //     sortOrder = 'desc';
        // }

        changePage('@ViewBag.search', @ViewBag.page, @ViewBag.pageSize, sortOrder);
    });

    // var searchbox = document.getElementById("searchbox");
    // if (searchbox) {
    //     searchbox.addEventListener("input", function () {
    //         var searchValue = searchbox.value.trim();
    //         if (searchValue.length < 3) {
    //             changePage('', @ViewBag.page, @ViewBag.pageSize, '@ViewBag.sortOrder');
    //         } else {
    //             changePage(searchValue, @ViewBag.page, @ViewBag.pageSize, '@ViewBag.sortOrder');
    //         }
    //     });
    // }
    //     });

   


    function changePage(search,page, pageSize,sortOrder) {
        
        window.location.href = "/Employee/Index"
            + "?search=" + search
            + "&page=" + page
            + "&pageSize=" + pageSize
            + "&sortOrder=" + sortOrder;
    }
</script>

<head>
    <style>
        .arrowup,
        .arrowdown {
            display: inline-block;
            vertical-align: middle;
            cursor: pointer;
        }

        .arrowup {
            margin-bottom: 17px;
        }

        .arrowdown {
            margin-left: -10px;
            margin-top: 0px;
        }

        .btn-info.text-dark {
            color: black;
        }

        /* Custom styles for the page size dropdown */
        #pageSize {
            width: 80px;
            display: inline-block;
        }

        /* Custom pagination styles */
        .pagination {
            margin-top: 20px;
        }

            .pagination .page-item.active .page-link {
                background-color: #00b4c1;
                border-color: #00b4c1;
                color: black; /* Set the text color to black for active page link */
            }

            .pagination .page-item .page-link {
                color: #00b4c1;
            }

            .pagination .page-item.disabled .page-link {
                color: #6c757d;
                pointer-events: none;
                cursor: default;
            }

        /* Additional margin for the page size label */
        label[for="pageSize"] {
            margin-right: 10px;
        }

        .page-size-container {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-family: 'Arial', sans-serif;
        }

            /* Styling the label */
            .page-size-container label {
                margin-right: 10px;
                font-weight: bold;
                font-size: 1.1em;
            }

        /* Custom styles for the dropdown */
        #pageSize {
            width: 100px;
            padding: 5px 10px;
            font-size: 1em;
            border: 2px solid #00b4c1;
            border-radius: 5px;
            color: #00b4c1;
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }

            #pageSize:hover {
                border-color: #00b4c1;
                color: #00b4c1;
            }



        /* Additional margin for the page size label */
        label[for="pageSize"] {
            margin-right: 10px;
        }

        /* Positioning and styling the loader overlay */
        .loader-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8); /* Semi-transparent background */
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000; /* Ensure it's on top */
        }

        /* Centering the loader image */
        .loader-image {
            width: 50px;
            height: 50px;
        }

        .table {
            border-collapse: separate;
            border-spacing: 10px; /* Adjust the spacing as needed */
        }

            .table th,
            .table td {
                padding: 10px; /* Add padding if needed for content */
                text-align: center;
            }

        .custom-thead {
            background-color: #00b4c1;

        }

        .form-label {
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .form-select {
            width: 100%;
            padding: 0.375rem 1.75rem 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

            .form-select:focus {
                border-color: #80bdff;
                outline: 0;
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            }

        .pagination {
            margin: 1rem;
        }

        .custom-heading {
            font-size: 3rem; /* Adjust the size as needed */
            font-weight: bold; /* Makes the text bold */
            color: #000000; /* Custom color */
            text-align: center; /* Center the text */
        }

    </style>
</head>
